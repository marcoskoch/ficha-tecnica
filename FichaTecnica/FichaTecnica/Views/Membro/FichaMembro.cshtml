@model FichaTecnica.Models.DetalheMembroModel

@{
ViewBag.Title = "FichaMembro";
}

<h2>Ficha Técnica do @Model.Nome</h2>

<div class="row">
	<div class="col-md-2 col-md-offset-5 img-membro">
		<img src="~/Upload/img/@Model.Foto" alt="..." class="img-circle">
	</div>
</div>

<div class="row top30" >
	<div class="col-md-9 comentarios">
		<div id="comentarios" class="row">

		</div>
	</div>
	<div class="col-md-3 dados-membro">
		<h2>@Model.Nome</h2>
		<p>@Model.Email</p>
		<p>
			Fone - @if (Model.Telefone != null) { @Model.Telefone; }
		</p>
		<p>@Model.Cargo</p>
		<p>@Model.DataDeNascimento.Date.ToString("dd/MM/yyyy") - @Model.Idade anos</p>
		<p>Projeto Renner</p>
		<p>Criação @Model.DataCriacao.Date.ToString("dd/MM/yyyy")</p>

        <div id="commits">
            
        </div>
		
		<h5>Média de 5 commits diários</h5>
		<div class="form-comentario">
			<h3>Adicionar Comentário</h3>

            <form action="/Membro/AdicionarComentario" method="POST" accept-charset="utf-8">

                <div class="form-group">
                    <label>Assunto:</label>
                    <input class="form-control" type="text" name="assunto" value="">
                </div>
                <div class="form-group">
                    <label>Comentário:</label>
                    <textarea class="form-control" name="texto"></textarea>
                </div>
                <div class="form-group">
                    <label>Tipo:</label>
                    <select class="form-control" name="tipo">
                        <option value="0">Positivo</option>
                        <option value="2">Negativo</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Projeto:</label>
                    <select class="form-control" name="idProjeto" id="projetos">
                    </select>
                </div>

                <input hidden="hidden" type="text" name="idMembro" value=@Model.Id>

                <div class="form-group">
                    <div class="col-sm-12">
                        <button type="submit" class="btn btn-primary">Adicionar</button>
                    </div>
                </div>
            </form>		
		</div>
	</div>
</div>

@section Scripts {
    <script type="text/javascript">

        var comments = @Html.Raw(Json.Encode(Model.Comentarios));
        var gitInfo = @Html.Raw(Json.Encode(Model.LinksGithub));
        var converter = new showdown.Converter();
        var localStorageCommits = localStorage.getItem('lastestCommits');
        var commitList = [];
        var projetos = [];

        if(localStorageCommits == null) {
            gitInfo.Links.forEach(function(l) {
                $.get(gitInfo.URLBaseAPI + l.URL + 'commits')
                    .done(function (response) {
                        response.forEach(function (i) {
                            commitList.push({ sha: i.sha.slice(0, 7), date: new Date(i.commit.author.date).getTime(), message: i.commit.message, link: i.html_url })
                        })
                    })
            })
        }
        else {
            commitList = JSON.parse(localStorageCommits);
        }

        $.get('http://localhost:54173/Membro/ProjetoAutocomplete')
            .done(function(response) {
                response.forEach(function(i) {
                    projetos.push(i)
                })
            })

        //TODO: refactor meio alternativo sem setTimeout

        setTimeout(function(){
            commitList.sort(function (left, right) { return left.date < right.date })
            commitList = commitList.slice(0, 3);
            localStorage.setItem('lastestCommits', JSON.stringify(commitList));


            commitList.forEach(function(commit) {
                $('#commits')
                    .append($('<div class="bloco-commit">')
                        .append($('<p>')
                            .append($('<a>').html(commit.sha).attr('href', commit.link))
                            .append($('<p>').html(commit.message)))
                )
            })

            projetos.forEach(function(projeto) {
                $('#projetos')
                    .append($('<option>').html(projeto.label).attr('value', projeto.value))
                    .attr('name', 'idProjeto')
            })

        }, 1000);

        comments.forEach(function(comment) { 
            var typeTag = comment.Tipo == 0 ? '<div class="tag-comentario positivo">' : '<div class="tag-comentario negativo">';

            $('#comentarios')
                  .append($('<div class="bloco-comentario">')
                    .append($(typeTag))
                    .append($('<h4>').text(comment.Assunto))
                    .append($(converter.makeHtml(comment.Texto)))
                    )
        })

        setTimeout(function() { 
            localStorage.clear(); 
        }, 1000 * 60) // * 10

    </script>
}